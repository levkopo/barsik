package ru.levkopo.barsik.emu

import DSP.SigBoardInfo3
import DSP.SigBoardInfo3Helper
import com.khubla.telnet.TelnetServer
import com.khubla.telnet.nvt.NVT
import com.khubla.telnet.nvt.spy.NVTSpy
import com.khubla.telnet.nvt.spy.impl.ConsoleNVTSpyImpl
import com.khubla.telnet.shell.Shell
import com.khubla.telnet.shell.ShellFactory
import com.khubla.telnet.shell.basic.BasicTelnetCommandRegistryImpl
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.flow.MutableStateFlow
import org.jacorb.orb.CDRInputStream
import org.omg.CORBA.portable.BoxedValueHelper


private val mainScope = CoroutineScope(Dispatchers.Default)
private val orbdProcessFlow = MutableStateFlow<Process?>(null)
private val runtime = Runtime.getRuntime()

@OptIn(ExperimentalStdlibApi::class)
fun main() {
//    thread {
//        IRBrowser.main(arrayOf(
//            "-i", "corbaloc::$LINUX_BOX_IP:$LINUX_BOX_ORB_PORT/NameService"
//        ))
//    }

//    return
//    val orb = org.jacorb.orb.ORB.init(arrayOf(), Config.orbProperties)
//    val sig = SigBoardInfo3(
//        arrayOf(
//            MapEntry("IdRcv", 1),
//            MapEntry("IdCon", 1),
////            MapEntry("IdSwt", 12),
////            MapEntry("Filters", 1),
////            MapEntry("SampleFreqs", 1),
////            MapEntry("RangeBands", 1),
////            MapEntry("WatchTimes", 1),
////            MapEntry("WinParams", 1),
////            MapEntry("SuperRangeBands", 1),
//        )
//    )
//
//    val poa = POAHelper.narrow(orb.resolve_initial_references("RootPOA"))
//    poa.the_POAManager().activate()
//
//
////    poa.activate_object(sig)
////
////    val obj = poa.servant_to_reference(sig)
//
//    val out = CDROutputStream()
//    SigBoardInfo3Helper.write(out, sig)
//    out.create_input_stream()
//    println(out.bufferCopy.toHexString())
//    println(out.bufferCopy.decodeToString())


//
//    val inp = CDRInputStream(bytes)
//    inp.setLittleEndian(true)
//    inp.read_abstract_interface()
//    inp.read_value(SigBoardInfo3::class.java)
//
//    println(inp.read_long())
//    println(inp.read_long())
//    println(inp.read_long())
//    println(inp.read_long())
//    println(inp.read_string())
//
//    val info: SigBoardInfo3 = SigBoardInfo3Helper.read(inp)
//    println(info.settings.joinToString(",") { it.key + "=" + it.value })
//

    /**
    0000   ac 22 0b ca 73 78 00 c0 3a 9d b5 66 08 00 45 00   ."..sx..:..f..E.
    0010   05 dc 27 23 40 00 40 06 ca ae 0a 42 17 64 0a 42   ..'#@.@....B.d.B
    0020   17 63 ec d0 c0 2c 1c 6a 8a 11 c0 1e c7 9d 50 10   .c...,.j......P.
    0030   00 3f 6d 66 00 00 47 49 4f 50 01 02 01 01 78 07   .?mf..GIOP....x.
    0040   00 00 09 00 00 00 00 00 00 00 00 00 00 00 01 00   ................
    0050   00 00 0e 00 00 00 53 69 67 42 6f 61 72 64 49 6e   ......SigBoardIn
    0060   66 6f 33 00 30 00 0f 00 00 00 5c 03 00 00 01 00   fo3.0.....\.....
    0070   00 00 1a 00 00 00 49 44 4c 3a 44 53 50 2f 53 69   ......IDL:DSP/Si
    0080   67 42 6f 61 72 64 49 6e 66 6f 33 3a 31 2e 30 00   gBoardInfo3:1.0.
    0090   00 00 0e 00 00 00 53 69 67 42 6f 61 72 64 49 6e   ......SigBoardIn
    00a0   66 6f 33 00 00 00 0e 00 00 00 06 00 00 00 49 64   fo3...........Id
    00b0   52 63 76 00 00 00 12 00 00 00 00 00 00 00 06 00   Rcv.............
    00c0   00 00 49 64 43 6f 6e 00 00 00 12 00 00 00 00 00   ..IdCon.........
    00d0   00 00 06 00 00 00 49 64 53 77 74 00 00 00 12 00   ......IdSwt.....
    00e0   00 00 00 00 00 00 08 00 00 00 46 69 6c 74 65 72   ..........Filter
    00f0   73 00 13 00 00 00 0c 00 00 00 01 00 00 00 06 00   s...............
    0100   00 00 00 00 00 00 0c 00 00 00 53 61 6d 70 6c 65   ..........Sample
    0110   46 72 65 71 73 00 13 00 00 00 0c 00 00 00 01 00   Freqs...........
    0120   00 00 06 00 00 00 00 00 00 00 0b 00 00 00 52 61   ..............Ra
    0130   6e 67 65 42 61 6e 64 73 00 00 13 00 00 00 0c 00   ngeBands........
    0140   00 00 01 00 00 00 06 00 00 00 00 00 00 00 0b 00   ................
    0150   00 00 57 61 74 63 68 54 69 6d 65 73 00 00 13 00   ..WatchTimes....
    0160   00 00 0c 00 00 00 01 00 00 00 06 00 00 00 00 00   ................
    0170   00 00 0a 00 00 00 57 69 6e 50 61 72 61 6d 73 00   ......WinParams.
    0180   00 00 13 00 00 00 0c 00 00 00 01 00 00 00 06 00   ................
    0190   00 00 00 00 00 00 10 00 00 00 53 75 70 65 72 52   ..........SuperR
    01a0   61 6e 67 65 42 61 6e 64 73 00 13 00 00 00 0c 00   angeBands.......
    01b0   00 00 01 00 00 00 06 00 00 00 00 00 00 00 0c 00   ................
    01c0   00 00 41 74 74 65 6e 75 61 74 6f 72 73 00 0f 00   ..Attenuators...
    01d0   00 00 94 01 00 00 01 00 00 00 1a 00 00 00 49 44   ..............ID
    01e0   4c 3a 44 53 50 2f 41 74 74 65 6e 75 61 74 6f 72   L:DSP/Attenuator
    01f0   53 65 74 3a 31 2e 30 00 00 00 0e 00 00 00 41 74   Set:1.0.......At
    0200   74 65 6e 75 61 74 6f 72 53 65 74 00 00 00 02 00   tenuatorSet.....
    0210   00 00 06 00 00 00 62 61 6e 64 73 00 00 00 15 00   ......bands.....
    0220   00 00 98 00 00 00 01 00 00 00 14 00 00 00 49 44   ..............ID
    0230   4c 3a 44 53 50 2f 42 61 6e 64 53 65 71 3a 31 2e   L:DSP/BandSeq:1.
    0240   30 00 08 00 00 00 42 61 6e 64 53 65 71 00 13 00   0.....BandSeq...
    0250   00 00 68 00 00 00 01 00 00 00 0f 00 00 00 58 00   ..h...........X.
    0260   00 00 01 00 00 00 13 00 00 00 49 44 4c 3a 44 53   ..........IDL:DS
    0270   50 2f 62 61 6e 64 5f 74 3a 31 2e 30 00 00 07 00   P/band_t:1.0....
    0280   00 00 62 61 6e 64 5f 74 00 00 03 00 00 00 03 00   ..band_t........
    0290   00 00 69 64 00 00 03 00 00 00 08 00 00 00 62 65   ..id..........be
    02a0   67 66 72 65 71 00 07 00 00 00 08 00 00 00 65 6e   gfreq.........en
    02b0   64 66 72 65 71 00 07 00 00 00 00 00 00 00 07 00   dfreq...........
    02c0   00 00 76 61 6c 75 65 73 00 00 15 00 00 00 98 00   ..values........
    02d0   00 00 01 00 00 00 18 00 00 00 49 44 4c 3a 44 53   ..........IDL:DS
    02e0   50 2f 41 74 74 45 6e 74 72 79 53 65 71 3a 31 2e   P/AttEntrySeq:1.
    02f0   30 00 0c 00 00 00 41 74 74 45 6e 74 72 79 53 65   0.....AttEntrySe
    0300   71 00 13 00 00 00 60 00 00 00 01 00 00 00 0f 00   q.....`.........
    0310   00 00 50 00 00 00 01 00 00 00 18 00 00 00 49 44   ..P...........ID
    0320   4c 3a 44 53 50 2f 61 74 74 5f 65 6e 74 72 79 5f   L:DSP/att_entry_
    0330   74 3a 31 2e 30 00 0c 00 00 00 61 74 74 5f 65 6e   t:1.0.....att_en
    0340   74 72 79 5f 74 00 02 00 00 00 08 00 00 00 62 61   try_t.........ba
    0350   6e 64 5f 69 64 00 03 00 00 00 04 00 00 00 61 74   nd_id.........at
    0360   74 00 07 00 00 00 00 00 00 00 0a 00 00 00 43 68   t.............Ch
    0370   61 6e 43 6f 75 6e 74 00 00 00 02 00 00 00 08 00   anCount.........
    0380   00 00 6d 69 6e 46 72 65 71 00 07 00 00 00 08 00   ..minFreq.......
    0390   00 00 6d 61 78 46 72 65 71 00 07 00 00 00 13 00   ..maxFreq.......
    03a0   00 00 41 6c 6c 47 72 6f 75 70 52 61 6e 67 65 42   ..AllGroupRangeB
    03b0   61 6e 64 73 00 00 13 00 00 00 0c 00 00 00 01 00   ands............
    03c0   00 00 06 00 00 00 00 00 00 00 01 00 00 00 00 00   ................
    03d0   00 00 01 00 00 00 00 00 00 00 01 00 00 00 00 00   ................
    03e0   00 00 10 00 00 00 00 00 20 41 00 00 c8 41 00 00   ........ A...A..
    03f0   48 42 00 00 c8 42 00 00 48 43 00 00 fa 43 00 00   HB...B..HC...C..
    0400   7a 44 00 40 1c 45 00 40 9c 45 00 40 1c 46 00 50   zD.@.E.@.E.@.F.P
    0410   43 46 00 50 c3 46 00 50 43 47 00 50 c3 47 00 50   CF.P.F.PCG.P.G.P
    0420   43 48 00 24 74 48 10 00 00 00 c0 e1 e4 48 c0 e1   CH.$tH.......H..
    0430   e4 48 c0 e1 e4 48 c0 e1 e4 48 c0 e1 e4 48 c0 e1   .H...H...H...H..
    0440   e4 48 c0 e1 e4 48 c0 e1 e4 48 c0 e1 e4 48 c0 e1   .H...H...H...H..
    0450   e4 48 c0 e1 e4 48 c0 e1 e4 48 c0 e1 e4 48 c0 e1   .H...H...H...H..
    0460   e4 48 c0 e1 e4 48 c0 e1 e4 48 10 00 00 00 80 96   .H...H...H......
    0470   98 4a 80 96 98 4a 80 96 98 4a 80 96 98 4a 80 96   .J...J...J...J..
    0480   98 4a 80 96 98 4b 80 96 98 4b 80 96 98 4b 80 96   .J...K...K...K..
    0490   98 4b 80 96 98 4b 80 96 98 4b 80 96 98 4b 80 96   .K...K...K...K..
    04a0   98 4b 80 96 98 4b 80 96 98 4b 80 96 98 4b 30 00   .K...K...K...K0.
    04b0   00 00 cd cc 4c 3e 00 00 80 3f 00 00 00 00 0a d7   ....L>...?......
    04c0   a3 3d cd cc cc 3e 00 00 00 00 0a d7 23 3d cd cc   .=...>......#=..
    04d0   4c 3e 00 00 00 00 0a d7 a3 3c cd cc cc 3d 00 00   L>.......<...=..
    04e0   00 00 0a d7 23 3c cd cc 4c 3d 00 00 00 00 6f 12   ....#<..L=....o.
    04f0   83 3b 0a d7 a3 3c 00 00 00 00 6f 12 03 3b 0a d7   .;...<....o..;..
    0500   23 3c 00 00 00 00 17 b7 51 3a 6f 12 83 3b 00 00   #<......Q:o..;..
    0510   00 00 17 b7 d1 39 6f 12 03 3b 00 00 00 00 17 b7   .....9o..;......
    0520   51 39 6f 12 83 3a 00 00 00 00 ac c5 27 39 17 b7   Q9o..:......'9..
    0530   51 3a 00 00 00 00 ac c5 a7 38 17 b7 d1 39 00 00   Q:.......8...9..
    0540   00 00 ac c5 27 38 17 b7 51 39 00 00 00 00 ac c5   ....'8..Q9......
    0550   a7 37 17 b7 d1 38 00 00 00 00 ac c5 27 37 17 b7   .7...8......'7..
    0560   51 38 00 00 00 00 bd 37 06 37 ac c5 27 38 00 00   Q8.....7.7..'8..
    0570   00 00 30 00 00 00 00 00 80 3f 00 00 00 40 00 00   ..0......?...@..
    0580   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
    0590   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
    05a0   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
    05b0   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
    05c0   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
    05d0   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
    05e0   00 00 00 00 00 00 00 00 00 00                     ..........
     */

    val bytes = intArrayOf(0x1, 0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x53, 0x69, 0x67, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x33, 0x0, 0x30, 0x0, 0xf, 0x0, 0x0, 0x0, 0x5c, 0x3, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x49, 0x44, 0x4c, 0x3a, 0x44, 0x53, 0x50, 0x2f, 0x53, 0x69, 0x67, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x33, 0x3a, 0x31, 0x2e, 0x30, 0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x53, 0x69, 0x67, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x33, 0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x49, 0x64, 0x52, 0x63, 0x76, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x49, 0x64, 0x53, 0x77, 0x74, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x0, 0x13, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x72, 0x65, 0x71, 0x73, 0x0, 0x13, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x57, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x0, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x0, 0x13, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x0, 0xf, 0x0, 0x0, 0x0, 0x94, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x49, 0x44, 0x4c, 0x3a, 0x44, 0x53, 0x50, 0x2f, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x3a, 0x31, 0x2e, 0x30, 0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0, 0x0, 0x98, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0x49, 0x44, 0x4c, 0x3a, 0x44, 0x53, 0x50, 0x2f, 0x42, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x3a, 0x31, 0x2e, 0x30, 0x0, 0x8, 0x0, 0x0, 0x0, 0x42, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x0, 0x13, 0x0, 0x0, 0x0, 0x68, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x58, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0x49, 0x44, 0x4c, 0x3a, 0x44, 0x53, 0x50, 0x2f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x3a, 0x31, 0x2e, 0x30, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x69, 0x64, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x62, 0x65, 0x67, 0x66, 0x72, 0x65, 0x71, 0x0, 0x7, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x65, 0x6e, 0x64, 0x66, 0x72, 0x65, 0x71, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x0, 0x0, 0x15, 0x0, 0x0, 0x0, 0x98, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x49, 0x44, 0x4c, 0x3a, 0x44, 0x53, 0x50, 0x2f, 0x41, 0x74, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x71, 0x3a, 0x31, 0x2e, 0x30, 0x0, 0xc, 0x0, 0x0, 0x0, 0x41, 0x74, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x71, 0x0, 0x13, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x50, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x49, 0x44, 0x4c, 0x3a, 0x44, 0x53, 0x50, 0x2f, 0x61, 0x74, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x3a, 0x31, 0x2e, 0x30, 0x0, 0xc, 0x0, 0x0, 0x0, 0x61, 0x74, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x0, 0x2, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x0, 0x3, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x61, 0x74, 0x74, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x43, 0x68, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x6d, 0x69, 0x6e, 0x46, 0x72, 0x65, 0x71, 0x0, 0x7, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x65, 0x71, 0x0, 0x7, 0x0, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x41, 0x0, 0x0, 0xc8, 0x41, 0x0, 0x0, 0x48, 0x42, 0x0, 0x0, 0xc8, 0x42, 0x0, 0x0, 0x48, 0x43, 0x0, 0x0, 0xfa, 0x43, 0x0, 0x0, 0x7a, 0x44, 0x0, 0x40, 0x1c, 0x45, 0x0, 0x40, 0x9c, 0x45, 0x0, 0x40, 0x1c, 0x46, 0x0, 0x50, 0x43, 0x46, 0x0, 0x50, 0xc3, 0x46, 0x0, 0x50, 0x43, 0x47, 0x0, 0x50, 0xc3, 0x47, 0x0, 0x50, 0x43, 0x48, 0x0, 0x24, 0x74, 0x48, 0x10, 0x0, 0x0, 0x0, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0xc0, 0xe1, 0xe4, 0x48, 0x10, 0x0, 0x0, 0x0, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x30, 0x0, 0x0, 0x0, 0xcd, 0xcc, 0x4c, 0x3e, 0x0, 0x0, 0x80, 0x3f, 0x0, 0x0, 0x0, 0x0, 0xa, 0xd7, 0xa3, 0x3d, 0xcd, 0xcc, 0xcc, 0x3e, 0x0, 0x0, 0x0, 0x0, 0xa, 0xd7, 0x23, 0x3d, 0xcd, 0xcc, 0x4c, 0x3e, 0x0, 0x0, 0x0, 0x0, 0xa, 0xd7, 0xa3, 0x3c, 0xcd, 0xcc, 0xcc, 0x3d, 0x0, 0x0, 0x0, 0x0, 0xa, 0xd7, 0x23, 0x3c, 0xcd, 0xcc, 0x4c, 0x3d, 0x0, 0x0, 0x0, 0x0, 0x6f, 0x12, 0x83, 0x3b, 0xa, 0xd7, 0xa3, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x6f, 0x12, 0x3, 0x3b, 0xa, 0xd7, 0x23, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x17, 0xb7, 0x51, 0x3a, 0x6f, 0x12, 0x83, 0x3b, 0x0, 0x0, 0x0, 0x0, 0x17, 0xb7, 0xd1, 0x39, 0x6f, 0x12, 0x3, 0x3b, 0x0, 0x0, 0x0, 0x0, 0x17, 0xb7, 0x51, 0x39, 0x6f, 0x12, 0x83, 0x3a, 0x0, 0x0, 0x0, 0x0, 0xac, 0xc5, 0x27, 0x39, 0x17, 0xb7, 0x51, 0x3a, 0x0, 0x0, 0x0, 0x0, 0xac, 0xc5, 0xa7, 0x38, 0x17, 0xb7, 0xd1, 0x39, 0x0, 0x0, 0x0, 0x0, 0xac, 0xc5, 0x27, 0x38, 0x17, 0xb7, 0x51, 0x39, 0x0, 0x0, 0x0, 0x0, 0xac, 0xc5, 0xa7, 0x37, 0x17, 0xb7, 0xd1, 0x38, 0x0, 0x0, 0x0, 0x0, 0xac, 0xc5, 0x27, 0x37, 0x17, 0xb7, 0x51, 0x38, 0x0, 0x0, 0x0, 0x0, 0xbd, 0x37, 0x6, 0x37, 0xac, 0xc5, 0x27, 0x38, 0x0, 0x0, 0x0, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x12, 0x73, 0x41, 0x0, 0x0, 0x0, 0x0, 0x65, 0xcd, 0xcd, 0x41, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0xcd, 0xcd, 0x41, 0x0, 0x0, 0x0, 0x90, 0x1e, 0x6d, 0xe6, 0x41, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x34, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e, 0x40, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14, 0x40, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x40, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x40, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x34, 0x40, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x39, 0x40, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e, 0x40, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x12, 0x73, 0x41, 0x0, 0x0, 0x0, 0x90, 0x1e, 0x6d, 0xe6, 0x41, 0x10, 0x0, 0x0, 0x0, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4a, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b, 0x80, 0x96, 0x98, 0x4b)
        .map { it.toByte() }
        .toByteArray()

    val inp = CDRInputStream(bytes)
    inp.setLittleEndian(true)
    val operations = arrayOf(
        { inp.read_long() },
        { inp.read_string() },
        { inp.read_abstract_interface(SigBoardInfo3::class.java) },
    )

    for (operation in operations) {
        println(operation())
        println(inp.bufferCopy.toList().subList(inp._pos, bytes.size).toByteArray().toHexString())
        println()
    }

    return

    launchORBObserver()

    TelnetServer(23, 20, object : ShellFactory {
        override fun createShell(nvt: NVT): Shell = BarsShellImpl(
            nvt,
            BasicTelnetCommandRegistryImpl()
        ) { login, password, _ ->
            println("login: $login, password: $password")
            true
        }

        override fun getNVTSpy(): NVTSpy = ConsoleNVTSpyImpl()
    }).run()
}